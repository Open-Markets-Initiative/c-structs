/*******************************************************************************
 * C Structs For Cboe Europe Apf LastSale 1.7 Binary Model
 *******************************************************************************/

/*******************************************************************************
 * Enum Values
 *******************************************************************************/

/*
 * Packet Type Values
 */ 
#define ENUM_PACKET_TYPE_DEBUG_PACKET '+'
#define ENUM_PACKET_TYPE_LOGIN_ACCEPTED_PACKET 'A'
#define ENUM_PACKET_TYPE_LOGIN_REJECTED_PACKET 'J'
#define ENUM_PACKET_TYPE_SEQUENCED_DATA_PACKET 'S'
#define ENUM_PACKET_TYPE_SERVER_HEARTBEAT_PACKET 'H'
#define ENUM_PACKET_TYPE_LOGIN_REQUEST_PACKET 'L'
#define ENUM_PACKET_TYPE_UNSEQUENCED_DATA_PACKET 'U'
#define ENUM_PACKET_TYPE_CLIENT_HEARTBEAT_PACKET 'R'
#define ENUM_PACKET_TYPE_LOGOUT_REQUEST_PACKET 'O'

/*
 * Sequenced Message Type Values
 */ 
#define ENUM_SEQUENCED_MESSAGE_TYPE_LAST_SALE_EUROPE_MESSAGE 'u'
#define ENUM_SEQUENCED_MESSAGE_TYPE_LAST_SALE_EUROPE_MESSAGE_NEW '7'


/*******************************************************************************
 * Structs
 *******************************************************************************/

#pragma pack(push, 1)

/*
 * Structure: Unsequenced Data Packet
 */ 
typedef struct {
    char UnsequencedMessage[0];
} UnsequencedDataPacketT;

/*
 * Structure: Login Request Packet
 */ 
typedef struct {
    char Username[6];
    char Password[10];
    char RequestedSession[10];
    char RequestedSequenceNumber[10];
} LoginRequestPacketT;

/*
 * Structure: Last Sale Europe Message New
 */ 
typedef struct {
    char TradingDateTime[27];
    char Symbol[12];
    char Price[18];
    char PriceNotation[4];
    char PriceCurrency[3];
    char ExecutedShares[12];
    char NotionalAmount[18];
    char NotionalCurrency[3];
    char ExecutionVenue[4];
    char ThirdCountryTradingVenue[4];
    char PublicationDateTime[27];
    char TradeId[12];
    char MarketMechanism[4];
    char TradingMode[4];
    char TransactionCategory[4];
    char NegotiationFlag[4];
    char AgencyCrossTrade[4];
    char ModiﬁcationIndicator[4];
    char BenchmarkIndicator[4];
    char SpecialDividend[4];
    char OffBookAutomated[4];
    char PriceDiscoveryProcess[4];
    char AlgorithmicIndicator[4];
    char PreTradeTransparencyWaiver[4];
    char PortfolioFlag[4];
    char ContingentFlag[4];
    char GiveupFlag[4];
    char PostTradeDeferralReason[4];
    char DeferralOrEnrichmentType[4];
    char DeferralIlliquidInstrument[4];
    char DeferralSizeSpeciﬁc[4];
    char DuplicativeWithinJurisdiction[4];
    char DuplicativeAcrossJurisdiction[4];
    char IntraGroupIndicator[4];
    char Jurisdiction[2];
} LastSaleEuropeMessageNewT;

/*
 * Structure: Last Sale Europe Message
 */ 
typedef struct {
    char TradingDateTime[27];
    char Symbol[12];
    char Price[18];
    char PriceCurrency[3];
    char ExecutedShares[12];
    char ExecutionVenue[4];
    char PublicationDateTime[27];
    char TradeId[12];
    char TransactionCategory[4];
    char NegotiationFlag[4];
    char AgencyCrossTrade[4];
    char ModiﬁcationIndicator[4];
    char BenchmarkReferenceIndicator[4];
    char SpecialDividend[4];
    char PriceDiscoveryProcess[4];
    char AlgorithmicIndicator[4];
    char PostTradeDeferralReason[4];
    char DuplicativeIndicator[4];
    char Jurisdiction[2];
} LastSaleEuropeMessageT;

/*
 * Structure: Sequenced Message Header
 */ 
typedef struct {
    char Timestamp[8];
    char SequencedMessageType;
} SequencedMessageHeaderT;

/*
 * Structure: Sequenced Data Packet
 */ 
typedef struct {
    SequencedMessageHeaderT SequencedMessageHeader;
} SequencedDataPacketT;

/*
 * Structure: Login Rejected Packet
 */ 
typedef struct {
    char RejectReasonCode[1];
} LoginRejectedPacketT;

/*
 * Structure: Login Accepted Packet
 */ 
typedef struct {
    char Session[10];
    char SequenceNumber[10];
} LoginAcceptedPacketT;

/*
 * Structure: Debug Packet
 */ 
typedef struct {
    char Text[1];
} DebugPacketT;

#pragma pack(pop)

/*******************************************************************************

Protocol:
   Organization: Chicago Board Options Exchange
   Version: 1.7
   Date: Monday, October 2, 2023
   Specification: BATS_Europe_Last_Sale_Specification.pdf

Source:
   Generator: 1.0.0.0
   Compiler: 2.0
   License: MIT No Attribution License
   Authors: Omi Developers

This file was generated by the Open Markets Initiative (Omi).

Information relating to Omi:
https://github.com/Open-Markets-Initiative/Directory

*******************************************************************************/
